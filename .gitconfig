[alias]
  # View abbreviated SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 20 --graph --abbrev-commit
  # View the current working tree status using the short format
  s = status -s
  st = status
  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
  # `git di $number` shows the diff between the state `$number` revisions ago and the current state
  di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
  # Commit all changes
  c = commit -am
  # Commit
  ci = commit
  # Checkout a branch
  co = checkout
  # Checkout a branch
  br = branch
  # Show verbose output about tags, branches or remotes
  tags = tag -l --sort=taggerdate
  branches = branch -a
  remotes = remote -v
  # git flow feature
  ff = "flow feature"
  # git flow release
  fr = "flow release"
  # git flow hotfix
  fh = "flow hotfix"

[apply]
  # Detect whitespace errors when applying a patch
  whitespace = warn

[core]
  # Use vim for merges
  editor = vim
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  # Treat spaces before tabs, lines that are indented with 8 or more spaces,
  # and all kinds of trailing whitespace as an error
  whitespace = space-before-tab,indent-with-non-tab,trailing-space
  # respect changes to filename case
  ignorecase = false

[diff]
  # output logs for submodules that have changed
  submodule = log

[push]
  default = simple

[status]
  # show submodule changes on status
  submoduleSummary = true

[color]
  # Use colors in Git commands that are capable of colored output when outputting to the terminal
  ui = auto
[color "branch"]
  current = blue reverse
  local = blue
  remote = green
[color "diff"]
  meta = blue bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = blue
  changed = green
  untracked = cyan
[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = true
[pull]
  # Stop Git from emitting a warning when pulling branches
  rebase = false

[init]
  templatedir = ~/.git_template

# URL shorthands
[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf = "gist:"

[include]
  # Add user-specific details to ~/.gitconfig-local - useful for adding global
  # user.name and user.email configs
  #
  # If the file doesn't exist, this include is ignored
  path = ~/.gitconfig-local

[pager]
    diff = delta
    log = delta
    reflog = delta
    show = delta

[interactive]
    diffFilter = delta --color-only --features=interactive

[delta]
    features = decorations
    side-by-side = true

[delta "interactive"]
    keep-plus-minus-markers = false

[delta "decorations"]
    commit-decoration-style = blue ol
    commit-style = raw
    file-style = omit
    hunk-header-decoration-style = blue box
    hunk-header-file-style = red
    hunk-header-line-number-style = "#067a00"
    hunk-header-style = file line-number syntax
